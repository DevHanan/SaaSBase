-- MySQL Script generated by MySQL Workbench
-- 22 ماي, 2016 EET 04:10:04 م
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema saasBase
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `saasBase` ;

-- -----------------------------------------------------
-- Schema saasBase
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `saasBase` DEFAULT CHARACTER SET utf8 ;
USE `saasBase` ;

-- -----------------------------------------------------
-- Table `saasBase`.`users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`users` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`users` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NULL,
  `user_email` VARCHAR(45) NULL,
  `password` VARCHAR(100) NULL,
  `reset_password_token` VARCHAR(100) NULL DEFAULT NULL,
  `token_expiration_date` TIME NULL,
  `user_profile_info` LONGTEXT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`teams` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`teams` (
  `team_id` INT NOT NULL AUTO_INCREMENT,
  `users_user_id` INT NOT NULL,
  `payment_status` TINYINT(1) NULL DEFAULT 0,
  PRIMARY KEY (`team_id`),
  INDEX `fk_teams_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_teams_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `saasBase`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`users_in_teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`users_in_teams` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`users_in_teams` (
  `users_user_id` INT NOT NULL,
  `teams_team_id` INT NOT NULL,
  `Is_accept` TINYINT(1) NULL DEFAULT NULL,
  `Is_active` TINYINT(1) NULL DEFAULT NULL,
  PRIMARY KEY (`users_user_id`, `teams_team_id`),
  INDEX `fk_users_has_teams_teams1_idx` (`teams_team_id` ASC),
  INDEX `fk_users_has_teams_users1_idx` (`users_user_id` ASC),
  CONSTRAINT `fk_users_has_teams_users1`
    FOREIGN KEY (`users_user_id`)
    REFERENCES `saasBase`.`users` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_teams_teams1`
    FOREIGN KEY (`teams_team_id`)
    REFERENCES `saasBase`.`teams` (`team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`role` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`role` (
  `role_id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NULL,
  `role_status` VARCHAR(45) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`config`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`config` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`config` (
  `config_id` INT NOT NULL AUTO_INCREMENT,
  `config_name` VARCHAR(45) NULL,
  `config_vaue` LONGTEXT NULL,
  PRIMARY KEY (`config_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`role_has_users_in_teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`role_has_users_in_teams` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`role_has_users_in_teams` (
  `role_id` INT NOT NULL,
  `users_in_teams_user_id` INT NOT NULL,
  `users_in_teams_team_id` INT NOT NULL,
  PRIMARY KEY (`role_id`, `users_in_teams_user_id`, `users_in_teams_team_id`),
  INDEX `fk_role_has_users_in_teams_users_in_teams1_idx` (`users_in_teams_user_id` ASC, `users_in_teams_team_id` ASC),
  INDEX `fk_role_has_users_in_teams_role1_idx` (`role_id` ASC),
  CONSTRAINT `fk_role_has_users_in_teams_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `saasBase`.`role` (`role_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_users_in_teams_users_in_teams1`
    FOREIGN KEY (`users_in_teams_user_id` , `users_in_teams_team_id`)
    REFERENCES `saasBase`.`users_in_teams` (`users_user_id` , `teams_team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`invitedUsers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`invitedUsers` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`invitedUsers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user_email` VARCHAR(45) NULL,
  `teams_team_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_invitedUsers_teams1_idx` (`teams_team_id` ASC),
  CONSTRAINT `fk_invitedUsers_teams1`
    FOREIGN KEY (`teams_team_id`)
    REFERENCES `saasBase`.`teams` (`team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`subscribtions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`subscribtions` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`subscribtions` (
  `subscr_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `teams_team_id` INT NOT NULL,
  PRIMARY KEY (`subscr_id`),
  INDEX `fk_subscribtions_teams1_idx` (`teams_team_id` ASC),
  CONSTRAINT `fk_subscribtions_teams1`
    FOREIGN KEY (`teams_team_id`)
    REFERENCES `saasBase`.`teams` (`team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saasBase`.`invoices`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `saasBase`.`invoices` ;

CREATE TABLE IF NOT EXISTS `saasBase`.`invoices` (
  `invoice_id` INT NOT NULL,
  `subscr_name` VARCHAR(45) NULL,
  `other_information` LONGTEXT NULL,
  `teams_team_id` INT NOT NULL,
  PRIMARY KEY (`invoice_id`, `teams_team_id`),
  INDEX `fk_invoices_teams1_idx` (`teams_team_id` ASC),
  CONSTRAINT `fk_invoices_teams1`
    FOREIGN KEY (`teams_team_id`)
    REFERENCES `saasBase`.`teams` (`team_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
